############# Network teaming and bonding #############
#Examples can be found in /usr/share/doc/teamd-1.27
#load balancing or aggregation

### Create connection
nmcli con add type team con-name lateam0 ifname lateam0 config '{"runner": {"name": "activebackup"}}'

#Options for the runner type are: activebackup, roundrobin, broadcast, loadbalance, lacp

### to check team connection properties
teamdctl lateam0 state

### Add IP address to the connection
nmcli con mod lateam0 ipv4.address '172.31.21.130/24'
nmcli con mod lateam0 ipv4.method manual

### Add ports to the connection
nmcli con add type team-slave con-name lateam0-port1 ifname eth0 master lateam0
nmcli con add type team-slave con-name lateam0-port2 ifname eth1 master lateam0

### Activete the ports and the connection
nmcli con up lateam0-port1
nmcli con up lateam0-port2
nmcli con up lateam0

### NIC bond connection
nmcli con add type bond con-name bond0 ifname bond0 mode 802.3ad
nmcli con add type bond-slave con-name bond0-port1 ifname enp0s8 master bond0

#### TASK ####
create team/bond connection from at least two interfaces
##############


################# Config IPv6 addresses and troubleshoot #############

### Create connection
nmcli con add type ethernet con-name net6 ifname enp0s8

### Add IP and manual 
nmcli con mod con6 ipv4.addresses 192.168.1.10/24
nmcli con mod con6 ipv4.method manual

### Add ipv6 address
nmcli con mod con6 ipv6.address fddb:fe2a:ab1e::c0a8:64/64
nmcli con mod con6 ipv6.method manual

### TASK ####
Assign ipv6 address to at least two interfaces
#############


################# Route IP Traffic and Create static routes #############

### Add static route
ip route add 192.145.64.0/24 via 192.168.1.1 dev enp0s8

### Delete
ip route del 192.145.64.0/24 via 192.168.1.1 dev enp0s8

### For a persisten static routes , create a file in sysconfig dir called static-routes (generally if the file exists all routes there are added)
vi /etc/sysconfig/static-routes
any net 192.145.64.0 netmask 255.255.255.0 gw 192.168.1.1 dev enp0s8

#### TASK ####
Add static routes to the system (persistent and temporary)
##############


################# Firewalld , rich rules, zones, NAT #################

### Pre configured service files can be found in /usr/lib/firewalld/services

### Traffic is evaluated in all active zones before accept or drop
firewall-cmd --get-active-zones

### Add rich rule to the zone
firewall-cmd --permanent --zone public --add-rich-rule 'rule family="ipv4" source address="192.168.55.145" port protocol="tcp" port="80" accept'

### Extended rich rule with logging , prefix for logged events and connection limit

firewall-cmd --permanent --zone internal --add-rich-rule \
'rule family="ipv4" \
source address=192.168.55.145 \
port protocol="tcp" port="80" \
log level=notice prefix="HTTP RULE" limit value="100/s" accept'

### NAT port redirection with firewalld
firewall-cmd --permanent --add-rich-rule \
'rule family=ipv4 \
source address=192.168.55.145 \
forward-port port=43000 protocol=tcp to-port=22'

### NAT port redirection to another host
firewall-cmd --permanent --add-forward-port port=2222:proto=tcp:toport=22:toaddr=192.168.55.37
firewall-cmd --permanent --add-masquerade

##### TASK #####
1. Add services to a zone
2. Add several rich rules based on different ports , 
protocols and sources (some of them must be logged, some limited)
3. Add rich rules for port redirection
##### Collective TASK #####
1. Create either team or aggregated network interface
2. Add it to zone and apply several rich rules and services
###########################


################## Modify and set kernel runtime parameters ################

### All kernel runtime parameters are located in /proc/sys

##### TASK #####
1. Change kernel parameters to presists after reboot
################


################# Kerberos KDC setup ###################

### First step will be to set up KDC authentication server
yum install krb5-server krb5-workstation pam-krb5

#### IMPORTANT #####
# Make sure that there is proper dns resolution it may be in /etc/hosts too
# MAKE SURE THAT THE HOST FQDN IS THE SAME AS hostname --fqdn
# Port numbers can be found in /etc/services if forgotten
####################

### Server config dir
/var/kerberos/krb4kdc

Change the realm domain in kdc.conf
##uncomment and add for only kerberos5 compat
master_key_type = aes256-cts
default_principal_flags = +preauth

/etc/krb5.conf

 default_realm = EXAMPLE.KDC
 [realms]
 EXAMPLE.KDC = {
  kdc = server.example.kdc
  admin_server = server.example.kdc
 }
[domain_realm]
 .example.kdc = EXAMPLE.KDC
 example.kdc = EXAMPLE.KDC

/var/kerberos/krb5kdc/kadm5.acl

*/admin@EXAMPLE.KDC     *

### Create kerberos database
kdb5_util create -s -r EXAMPLE.KDC

### Start the service
systemctl start krb5kdc kadmin && systemctl enable krb5kdc kadmin

### Adding principals to the kdc server
kadmin.local

#principal for admin acc
addprinc root/admin

#principal for user acc
addprinc krbtest 

#principal for the server hostname that will be authenticated
addprinc -randkey host/server.example.kdc

#add ktab file in /etc
ktadd host/server.example.kdc

#In order to be able to use SSH with krb auth find and change
/etc/ssh/ssh_config
GSSAPIAuthentication yes
GSSAPIDelegateCredentials yes

authconfig --enablekrb5 --update

### Firewall ports that needs to be opened either manually or with service
88/tcp , 88/udp, 749/tcp

#example service file
<?xml version="1.0" encoding="utf-8">
<service>
  <short>Kerberos</short>
  <port protocol="tcp" port="88"/>
  <port protocol="udp" port="88"/>
  <port protocol="tcp" port="749"/>
</service>

### In order to test it switch to krbtest user and perform kinit to auth

##### Client setup #####
yum install krb5-workstation
modify  /etc/krb5.conf to reflect the correct realm
add principal for the client host with kadmin and the admin set password
modify /etc/ssh/ssh_config

##### TASK #####
Set up KDC authentication with one server and at least two clients
################


################## ISCSI target and initiator setup #####################

### Port 3260/tcp
### Server setup
yum install targetcli
systemctl enable target

### Enter targetcli shell
1. Create a backstore (block device)
backstores/block create drive1 /dev/sdb1

#For a file backstore 
#backstores/fileio create name /path/to/file 200M

2. Create iscsi qalified name
iscsi/ create iqn.2018-08.localdomain.localhost:target1

3. Create a lun
iscsi/iqn.2018-08.localdomain.localhost:target1/tpg1/luns create /backstores/block/drive1

4. Create a ACL
iscsi/iqn.2018-08.localdomain.localhost:target1/tpg1/acls create iqn.2018-08.localdomain.localhost:client

#Optional create username and password for the client
iscsi/iqn.2018-08.localdomain.localhost:target1/tpg1/acls/iqn.2018-08.localdomain.localhost:client/ set auth userid=viktor
iscsi/iqn.2018-08.localdomain.localhost:target1/tpg1/acls/iqn.2018-08.localdomain.localhost:client/ set auth password=viktor

systemctl start target

### Client config
yum install iscsi-initiator-utils

#modify /etc/iscsi/initiatorname.iscsi to reflect the correct iqn for the acl
#modify /etc/iscsi/iscsid.conf
node.session.auth.authmethod = CHAP
node.session.auth.username = viktor
node.session.auth.password = viktor123

#Discover the target
iscsiadm --mode discovery --type sendtargets --portal 192.168.55.198

#Connect to the portal and login
iscsiadm --mode node --target iqn.2018-08.localdomain.localhost:target1 --portal 192.168.55.198 --login

#/etc/fstab entry
UUID=b2f34042-7d54-46e7-b6fd-2fb387f855c3       /mnt    xfs     _netdev 0 0

##### TASK #####
Create and mount devices via iscsi (fileio, block)
################


################# Produce and deliver reports on system usage ###################

### dstat tool
yum install dstat

### sysstat package
#Generate a report between two dates
sadf -s 01:00:00 -e 23:59:00 /var/log/sa/sa06

#Generate a report 
sadf -d /var/log/sa/sa07 -- -urd -n DEV


################# Network Services ##########################

### Selinux port labeling
semanage port -l
semanage port -a 21221 -p tcp -t ssh_context_t

### TASK #####
 Using sed, modify the /etc/httpd/conf.d/userdir.conf directory and replace UserDir disabled with UserDir public_html.
 Create the public_html directory in the /home/user directory.
 Set the user owner and group owner of the /home/user and permissions accordingly
 Install the correct packages for troubleshooting SELinux policy denials and violations.
 troubleshoot the selinux violations
 Change the DocumentRoot of the httpd daemon
##############


############# Install and configure Apache #################

### Configure private directories

<Directory "/home/viktor/public_html">
  AllowOverride All
  Require all granted
<Directory/>

<Directory "/home/viktor/public_html/private">
  AllowOverride AuthConfig
</Directory>

# .htaccess in the private directory
AuthType Basic
AuthName "Password protected"
AuthUserFile "/etc/httpd/conf/.auth_users"
Require user viktor

# Create the password
htpasswd -c /etc/httpd/conf/.auth_users viktor
chown apache: /etc/httpd/conf/.auth_users
chmod 600 /etc/httpd/conf/.auth_users

##### TASK #####
Create private directory for a user 
################

### Configure group managed content ###

groupadd test
mkdir /group-content
chgrp test /group-content
chmod 771 /group-content
#Change selinux for the dir

<Directory "/group-content">
  AllowOverride AuthConfig
</Directory>

# /group-content/.htaccess
AuthType Basic
AuthName "pass protected dir"
AuthUserFile "/etc/httpd/conf/.dbusers"
AuthGroupFile "/etc/httpd/conf/.group"
Require group test

# /group-content/.group
test: user1 user2

# generate passwords for the group users
htpasswd -c /etc/httpd/conf/.dbusers user1
htpasswd /etc/httpd/conf/.dbusers user2
 
##### TASK #####
Create private directory for group
################

### Configure Virtual Host ###

<VirtualHost *:80>
  ServerAdmin admin@example.com
  ServerName example.com
  ServerAlias www.example.com
  DocumentRoot /home/viktor/public_html

  ErrorLog logs/example_error.log
  CustomLog logs/example_access.log combined
</VirtualHost>

<VirtualHost *:443>
  ServerName example.com
  DocumentRoot /home/viktor/public_html
  ServerAlias www.example.com

  ErrorLog logs/example_ssl_error.log

  SSLEngine on
  SSLCertificateFile /etc/httpd/certs/example.com.crt
  SSLCertificateKeyFile /etc/httpd/certs/example.com.key

</VirtualHost>


## To execute cgi scripts for non default directory
1. Change the selinux content to httpd_sys_script_exec_t for the new dir
2. Change ScriptAlias in httpd.conf 

#ScriptAlias /cgi-bin/ "/path/to/newdir"
#<Directory "/path/to/newdir">
#  AllowOverride None
#  Options None
#  Require all granted
#</Directory>

##### HTTPS #####

## Generate key-par,csr,ca-certificate
## examples can be found in /etc/pki/tls/certs

yum install mod_ssl openssl

#gen private key
openssl genpkey -algorithm rsa -pkeyopt rsa_keygen_bits:2048 -out example.com

#gen csr
openssl req -new -key example.com -out example.com.csr

#sign the csr
openssl x509 -req -days 365 -signkey example.com -in example.com.csr -out example.com.crt


#################### DNS Services ######################

### Caching only nameservers
yum install bind bind-utils

# Changes in /etc/named.conf
listen-on port 53 { any;};
allow-query { any; };
dnssec-validation no;

named-checkconf
systemctl enable named && systemctl start named

#Do not forget to modify the firewall

#Test
nslookup linuxacademy.com 127.0.0.1
dig @172.0.0.1 linuxacademy.com

##### TASK #####
Set up a caching only nameserver
################


###################### NFS server and client setup (Kerberos) #####################

## NFS export file /var/lin/nfs/etab
## NFS ports: 2049/tcp 2049/udp
## RPCbind ports: 111/tcp 111/udp
## Server setup
yum install nfs-utils

# Create export dirs one for rw, one for ro
mkdir /nfs-rw /nfs-ro

# Modify Selinux
setsebool -P nfs_export_all_rw on
setsebool -P nfs_export_all_ro on

systemctl enable rpcbind nfs-server && systemctl start rpcbind nfs-server

#/etc/exports
/nfs-rw 10.1.1.23(rw,no_root_squash)
/nfs-ro 10.1.1.20(sync)

exportfs -avr

### For group collaboration directory
groupadd -g 7654 nfsadmins
mkdir /group-export
chown nfsnobody:nfsadmins /group-export
chmod g+s /group-export
#Group,gid,directory name and users must completely match on client and server


#### NFS with Kerberos setup #### 
#selinux nfs context and booleans
semanage fcontext -at public_content_rw_t "/export-dir(/.*)?"

## Add nfs-server principle to kdc server
addprinc -randkey host/nfs.server
ktadd host/nfs.server

addprinc -randkey nfs/nfs.server
ktadd nfs/nfs.server

## In /etc/exports add as parameter sec=krb5

#On the nfs client kadmin
addprinc -randkey nfs/nfs.client
ktadd nfs/nfs.client

systemctl enable nfs-client.target && systemctl start nfs-client.target
### When mounting use nfs4 type
mount -t nfs4 -o sec=krb5 10.1.1.25:/export /mnt


#### Client setup ####

yum install nfs-utils
systemctl enable rpcbind && systemctl start rpcbind
mount -t nfs -o rw 10.1.1.25:/nfs-rw /mnt
mount -t nfs -o ro 10.1.1.25:/nfs-ro /dir2

/etc/fstab
10.1.1.25:/nfs-rw /mnt  nfs   _netdev,rw   0 0


##################### SMB server and client setup ##########################

yum install samba samba-client cifs-utils

#Selinux booleans
samba_export_all_ro --> on
samba_export_all_rw --> on
samba_share_nfs --> on

#Selinux context for export dir
semanage fcontext -at samba_share_t "/samba(/.*)?"

### smb.conf

[global]
  workgroup = redhat                          ## Workgroup
  server string = 172.16.16.203               ## Ip of the serving server
  hosts allow   = 127. 172.16.16.0/22         ## Allowed hosts
  interfaces    = lo enp0s3 team
  passdb backend= smbpasswd                   ## User control for samba shares
  security      = user
  log file      = /var/log/samba/%m.log
  max log size  = 5000

[share]
  comment   = shared                          ## Samba comment
  browsable = yes
  path      = /samba
  public    = yes
  valid users = viktor                        ## Valid only for user viktor
  write list  = viktor                        ## Write only by user viktor

  
## Generate user for samba
smbpasswd -a viktor

systemctl enable smb && systemctl start smb

## Test the smb client connection
smbclient -L //localhost -U viktor

### Group collaboration shared dir
groupadd smbgroup
usermod -aG user smbgroup
mkdir /group
chgrp smbgroup /group
chmod 770 /group
semanage fcontext -at samba_share_t "/group(/.*)?"

## Gid must be the same on both servers

[group]
        comment = Group share
        path = /smbgroup
        browseable = Yes
        writeable = Yes
        public = no
        valid users = @samba
        write list = @samba
        force group = +samba
        create mask = 0770


#### Samba Client #####
yum install samba samba-client cifs-utils

## Create the same user with same uid

smbclient -L //server -U user

mount -t cifs -o username=viktor //server/share /mnt

## /etc/fstab
//kdc.redhat.exam/share /samba  cifs    _netdev,username=viktor,password=viktor123      0 0


##### TASK #####
Set up share mounts for user
Set up share mount for group collaboration
################

######################## FTP #########################

yum install vsftpd

## Selinux booleans
ftpd_anon_write --> on
ftpd_full_access --> on

#/etc/vsftpd/vsftpd.conf


anon_root — Specifies the directory vsftpd changes to after an anonymous user logs in.
anonymous_enable=YES
no_anon_password=YES
anon_root=/var/ftp/pub

##### TASK #####
Configure an FTP server to allow anonymous downloads from /var/ftp/pub 
and anonymous uploads to /var/ftp/pub/inbound (create this directory 
and set permissions appropriately). 
Ensure that uploaded files cannot be viewed or downloaded without admin intervention.
################


######################## SMTP ########################

## For testing
rhce-test@abv.bg
redhat123

### Mail forwarding server
yum install postfix

#Settings needed
#/etc/postfix/main.cf

relayhost = [smtp.abv.bg]:465
inet_interfaces = loopback-only
mynetworks = 127.0.0.1/8 [::1]/128
myorigin = $myhostname
mydestination =
local_transport = error: local delivery disabled

## If there is a username and password
/etc/postfix/sasl_passwd
[smtp.example.com] username:password
postmap /etc/postfix/sasl_passwd

smtp_sasl_auth_enable = yes
smtp_sasl_security_options = noanonymous
smtp_sasl_password_maps = hash:/etc/postfix/sasl_passwd
smtp_use_tls = yes
smtp_tls_CAfile = /etc/ssl/certs/ca-certificates.crt


### Client testing
yum install mailx

mails -s "Subject" address@example.com
BODY

##### TASK #####
Configure postfix to forward mail to another mail server
################


#################### NTP service #########################

yum install ntp

#/etc/ntp.conf 
server 127.127.1.0

firewall-cmd --permanent --add-port 123/udp

##Client ntp
peer server1.address

firewall-cmd --permanent --add-service ntp


####################### Database Services ######################

create user 'viktor'@'%' identified by password 'viktor123';
select password('viktor123');
grant all on *.* to 'root'@'172.16.16.1' identified by 'viktor';
create table test(name varchar(20), age int, address varchar(200));
insert into test(name,age,address) values ('viktor','28','Sofia,Bulgaria');
update test set name='rusko', age='27', address='Karlovo,Bulgaria' where name = 'stefan';
update test set name='ivan', age='27', address='Karlovo,Bulgaria' where name like '%rus%';


## /etc/my.cnf
bind-address 127.1.1.1
skip-networking=1 
